; WendzelNNTPd default configuration file
;
; Please note:
;     By default, SQLite instead of MySQL is used; no
;     authentication is activated and standard ports are used.
;     Also, the server listens only on the localhost interface
;     ("listen 127.0.0.1").

;;;;;;; Fundamental setup ;;;;;;;
; Specify a database engine. Currently supported are 'sqlite3'
; and 'mysql'.
database-engine sqlite3

;;;;;;; MySQL-specific parameters ;;;;;;;
; Your database hostname (not used in case of sqlite3).
database-server 127.0.0.1
; The database connection port (not used in case of sqlite3).
; Comment out to use the default port of your database engine.
database-port 3306
; Server authentication (not required for sqlite3)
database-username myuser
database-password mypass

;;;;;;; Network settings ;;;;;;;
; You need to specify a connector for each port WendzelNNTPd should
; listen on. 
;<connector>
;;  	Initially enable TLS on connector - denies session without TLS
;   enable-ssl
;;  	Enable STARTTLS in connection
;   enable-starttls
;;		Set available ciphers on server - see cipher string from OpenSSL
;   openssl-ciphers "ALL:!COMPLEMENTOFDEFAULT:!eNULL"
;;		Set available TLS versions
;   openssl-tlsversion "1.0-1.3"
;;		Server certificate
;   openssl-servercertificate "/usr/local/etc/ssl.crt/server.crt"
;;		Key for Server certificate
;   openssl-serverkey "/usr/local/etc/ssl.key/server.key"
;;		Force server cipher order
;   openssl-server-cipher-preference
;;		Request client authentication by certificate
;;  	openssl-verifyclient [ none | optional | require ]
;   openssl-verifyclient optional
;;		Specify nuber of CA levels to verify eg. 0==selfsignes Certs only
;   openssl-verifydepth 5
;;		Path for CA certificates used to verify client certificates
;;		Use c_rehash <Path> to build required hashes for certificates!
;   openssl-CApath "/usr/local/etc/ssl.ca"
;;		File that holds all CA certificates used to verify client certificates
;   openssl-CAfile "/usr/local/etc/ssl.ca/cacert.pem"
;;		Use first CN in Subject of client certificate to authenticate NNTP user
;   openssl-CNauthentication
;;		Enable CRL-checking on client certificates
;;  	openssl-CRLcheck [ none | leaf | chain ]
;   openssl-CRLcheck leaf
;;		Specify path that holds CRL vertificates
;;		Use c_rehash <Path> to build required hashes for certificates!
;   openssl-CRLpath "/usr/local/etc/ssl.crl"
;;		File that holds all CRL certificates used for checking
;   openssl-CRLfile "/usr/local/etc/ssl.crl/cacert.crl"
;;  	Set port to listen on
;   port		119
;;  	Set IPv4 od IPv6 to use with connector
;   listen	0.0.0.0
;</connector>
;IPv4 connectors
<connector>
;   enable-ssl
;   openssl-ciphers "ALL:!COMPLEMENTOFDEFAULT:!eNULL"
;   openssl-tlsversion "1.0-1.3"
;   openssl-servercertificate "/usr/local/etc/ssl.crt/server.crt"
;   openssl-serverkey "/usr/local/etc/ssl.key/server.key"
;   openssl-server-cipher-preference
;;   openssl-verifyclient [ none | optional | require ]
;   openssl-verifyclient optional
;   openssl-verifydepth 5
;   openssl-CNauthentication
;   openssl-CApath "/usr/local/etc/ssl.ca"
;;   openssl-CAfile "/usr/local/etc/ssl.ca/cacert.pem"
;;  openssl-CRLcheck [ none | leaf | chain ]
;   openssl-CRLcheck leaf
;   openssl-CRLpath "/usr/local/etc/ssl.crl"
;;   openssl-CRLfile "/usr/local/etc/ssl.crl/cacert.crl"
   port     563
   listen   0.0.0.0
</connector>
<connector>
;   enable-starttls
;   openssl-ciphers "ALL:!COMPLEMENTOFDEFAULT:!eNULL"
;   openssl-tlsversion "1.0-1.3"
;   openssl-servercertificate "/usr/local/etc/ssl.crt/server.crt"
;   openssl-serverkey "/usr/local/etc/ssl.key/server.key"
;   openssl-server-cipher-preference
;;   openssl-verifyclient [ none | optional | require ]
;   openssl-verifyclient optional
;   openssl-verifydepth 5
;   openssl-CNauthentication
;   openssl-CApath "/usr/local/etc/ssl.ca"
;;   openssl-CAfile "/usr/local/etc/ssl.ca/cacert.pem"
;;  openssl-CRLcheck [ none | leaf | chain ]
;   openssl-CRLcheck leaf
;   openssl-CRLpath "/usr/local/etc/ssl.crl"
;;   openssl-CRLfile "/usr/local/etc/ssl.crl/cacert.crl"
   port		119
   listen	0.0.0.0
</connector>
;IPv6 connectors
<connector>
   port		563
   listen	::1
</connector>
<connector>
   port		119
   listen	::1
</connector>

; Uncomment 'verbose-mode' if you want to find errors or if you
; have problems with the logging subsystem. All log strings are
; written to STDERR, too, if verbose-mode is activated.
; Additionally all commands sent by clients are written to STDERR
; (but not to the logfile).
;verbose-mode

;;;;;;; Advanced settings ;;;;;;;
; The max. allowed size of a single posting (in bytes). The
; default value is 20 MBytes (20*1024^2=20.971.520 Bytes).
max-size-of-postings 20971520

; Activate authentication.
;use-authentication

; If you activated authentication (above, using the keyword
; `use-authentication'), you can also activate the support for
; access control lists (ACL).
;use-acl

; This keyword prevents that IPs or hostnames will become part of
; the message ID generated by WendzelNNTPd (what is the default
; case). Uncomment `enable-anonym-mids' to enable this feature.
;enable-anonym-mids

; This keyword defines a salt to be used in conjunction with the
; passwords to calculate the cryptographic hashes. The salt must
; be in the form [a-zA-Z0-9.:\/-_]+.
; Please note that the final hash is calculated using
; salt+username+password as an input to prevent simple
; password-identification attacks when an equal password is used
; by >=2 users.
; ATTENTION: If you change the salt after passwords have been
; stored, they will be rendered invalid! If you comment out
; hash-salt, then the default hash salt defined in the source
; code will be used.
; You should change the default hash-salt value before first use!
hash-salt 0.hG4//3baA-::_\

