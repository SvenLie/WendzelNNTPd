name: Desktop App Test

on:
    workflow_dispatch:

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: 'Login to Azure Container Registry'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

        - name: Get server certificate from secrets
          uses: mobiledevops/secret-to-file-action@v1
          with:
            base64-encoded-secret: ${{ secrets.SERVER_CERTIFICATE }}
            filename: "server.crt"
            working-directory: "."
        
        - name: Get server-self certificate from secrets
          uses: mobiledevops/secret-to-file-action@v1
          with:
            base64-encoded-secret: ${{ secrets.SERVER_SELF_CERTIFICATE }}
            filename: "server-self.crt"
            working-directory: "."

        - name: Get ca certificate from secrets
          uses: mobiledevops/secret-to-file-action@v1
          with:
            base64-encoded-secret: ${{ secrets.CA_CERTIFICATE }}
            filename: "ca.crt"
            working-directory: "."

        - name: Get ca-self certificate from secrets
          uses: mobiledevops/secret-to-file-action@v1
          with:
            base64-encoded-secret: ${{ secrets.CA_SELF_CERTIFICATE }}
            filename: "ca-self.crt"
            working-directory: "."

        - name: Get server key from secrets
          uses: mobiledevops/secret-to-file-action@v1
          with:
            base64-encoded-secret: ${{ secrets.SERVER_KEY }}
            filename: "server.key"
            working-directory: "."
        
        - name: Get server-self key from secrets
          uses: mobiledevops/secret-to-file-action@v1
          with:
            base64-encoded-secret: ${{ secrets.SERVER_SELF_KEY }}
            filename: "server-self.key"
            working-directory: "."

        - name: 'Build and push image to registry'
          run: |
            docker build -f ./docker/Dockerfile_Github -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/wendzelnntpd:${{ github.sha }} .
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/wendzelnntpd:${{ github.sha }}

        - name: 'Deploy to Azure Container Instances'
          uses: azure/cli@v2
          with:
            azcliversion: latest
            inlineScript: |
                az container create \
                  --name wendzelnntpd-${{ github.sha }} \
                  --resource-group ${{ secrets.RESOURCE_GROUP }} \
                  --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/wendzelnntpd:${{ github.sha }} \
                  --vnet wendzelNNTPdVNET \
                  --subnet wendzelNNTPdVNETSub2 \
                  --ports 118 119 563 564 \
                  --location "Germany West Central" \
                  --registry-login-server ${{ secrets.REGISTRY_LOGIN_SERVER }} \
                  --registry-username ${{ secrets.REGISTRY_USERNAME }} \
                  --registry-password ${{ secrets.REGISTRY_PASSWORD }}
        - name: 'Get Container IP'
          id: container-ip
          uses: azure/cli@v2
          with:
            azcliversion: latest
            inlineScript: |
                echo "ip=$(az container show --name "wendzelnntpd-${{ github.sha }}" --resource-group WendzelNNTPd --query ipAddress.ip --output tsv)" >> $GITHUB_OUTPUT

        - name: 'Update Loadbalancer Backend IP'
          uses: azure/cli@v2
          with:
            azcliversion: latest
            inlineScript: |
                az network lb address-pool address update --ip-address ${{steps.container-ip.outputs.ip}} --resource-group ${{ secrets.RESOURCE_GROUP }} --lb-name wendzelnntpd-proxy --pool-name Backend --name wendzelnntpd-backend-server
    unit-tests:
        runs-on: ubuntu-latest
        container:
          image: svenlie/expect:latest
          env:
            nntp_address: 'nntp.svenliebert.de'
        needs: build-and-deploy
        steps:
          - name: 'Checkout GitHub Action'
            uses: actions/checkout@main
          - name: Get ca-self certificate from secrets
            uses: mobiledevops/secret-to-file-action@v1
            with:
              base64-encoded-secret: ${{ secrets.CA_SELF_CERTIFICATE }}
              filename: "ca-self.crt"
              working-directory: "./unittesting/tls-testing"
          - name: Get ca-self key from secrets
            uses: mobiledevops/secret-to-file-action@v1
            with:
              base64-encoded-secret: ${{ secrets.CA_SELF_KEY }}
              filename: "ca-self.key"
              working-directory: "./unittesting/tls-testing"
          - name: Generate client key and certificate
            run: cd unittesting/tls-testing && chmod +x ./create-client-cert.sh && ./create-client-cert.sh 
          - name: Run unit tests
            run: cd unittesting/tls-testing && chmod +x ./run.sh && ./run.sh
    uat-nntp:
         runs-on: windows-latest
         needs: build-and-deploy
         steps:
             - uses: actions/checkout@v3
             - uses: FedericoCarboni/setup-ffmpeg@v3
               id: setup-ffmpeg
               with:
                 ffmpeg-version: release
                 architecture: 'x64'
                 github-token: ${{ github.server_url == 'https://github.com' && github.token || '' }}
             - name: Use Node.js
               uses: actions/setup-node@v3
             - name: Download Dependencies
               run: |
                 curl -L -o WindowsApplicationDriver_1.2.1.msi https://github.com/microsoft/WinAppDriver/releases/download/v1.2.1/WindowsApplicationDriver_1.2.1.msi
                 curl -L -o python-3.12.4-amd64.exe https://www.python.org/ftp/python/3.12.4/python-3.12.4-amd64.exe
                 curl -L -o thunderbird-setup.exe "https://download.mozilla.org/?product=thunderbird-128.0esr-SSL&os=win64&lang=en-US"
             - name: Enable developer-mode
               run : reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" /t REG_DWORD /f /v "AllowDevelopmentWithoutDevLicense" /d "1" 
             - name: Install Dependencies
               run: |
                 Start-Process msiexec "/i D:\a\WendzelNNTPd\WendzelNNTPd\WindowsApplicationDriver_1.2.1.msi /norestart /qn" -Wait
                 Write-Output "WinAppDriver installation complete."
                 Start-Process "D:\a\WendzelNNTPd\WendzelNNTPd\python-3.12.4-amd64.exe" -ArgumentList "/i /qn /S /AllUsers /norestart" -Wait -PassThru 
                 Write-Output "Python installation complete."
                 Start-Process "D:\a\WendzelNNTPd\WendzelNNTPd\thunderbird-setup.exe" -ArgumentList "/i /qn /S /AllUsers /norestart" -Wait -PassThru 
                 Write-Output "Thunderbird installation complete."
                 python -m ensurepip --upgrade
                 npm i --location=global appium
                 pip install Appium-Python-Client
                 pip install -U pytest
                 pip install requests
                 pip install pyautogui
                 appium driver install windows
                 Write-Output "installation complete."     
             - name: Add WinAppDriver firewall rule
               run: netsh advfirewall firewall add rule name="WinAppDriver remote" dir=in action=allow protocol=TCP localport=4723
             - name: Add videos directory for appium tests
               run: New-Item D:\a\WendzelNNTPd\WendzelNNTPd\user-acceptance-test\videos\ -ItemType Directory -ea 0
             - name: Run appium
               uses: nick-fields/retry@v2
               with:
                timeout_minutes: 10
                max_attempts: 10
                command: |
                  Start-Process "C:\npm\prefix\appium" -PassThru
                  python -m pytest D:\a\WendzelNNTPd\WendzelNNTPd\user-acceptance-test\nntp_thunderbird.py 
             - uses: actions/upload-artifact@v4
               name: Upload videos
               if: always()
               with:
                 name: videos-nntp
                 path: D:\a\WendzelNNTPd\WendzelNNTPd\user-acceptance-test\videos\
                 retention-days: 1
    uat-snntp:
         runs-on: windows-latest
         needs: build-and-deploy
         steps:
             - uses: actions/checkout@v3
             - uses: FedericoCarboni/setup-ffmpeg@v3
               id: setup-ffmpeg
               with:
                 ffmpeg-version: release
                 architecture: 'x64'
                 github-token: ${{ github.server_url == 'https://github.com' && github.token || '' }}
             - name: Use Node.js
               uses: actions/setup-node@v3
             - name: Download Dependencies
               run: |
                 curl -L -o WindowsApplicationDriver_1.2.1.msi https://github.com/microsoft/WinAppDriver/releases/download/v1.2.1/WindowsApplicationDriver_1.2.1.msi
                 curl -L -o python-3.12.4-amd64.exe https://www.python.org/ftp/python/3.12.4/python-3.12.4-amd64.exe
                 curl -L -o thunderbird-setup.exe "https://download.mozilla.org/?product=thunderbird-128.0esr-SSL&os=win64&lang=en-US"
             - name: Enable developer-mode
               run : reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" /t REG_DWORD /f /v "AllowDevelopmentWithoutDevLicense" /d "1" 
             - name: Install Dependencies
               run: |
                 Start-Process msiexec "/i D:\a\WendzelNNTPd\WendzelNNTPd\WindowsApplicationDriver_1.2.1.msi /norestart /qn" -Wait
                 Write-Output "WinAppDriver installation complete."
                 Start-Process "D:\a\WendzelNNTPd\WendzelNNTPd\python-3.12.4-amd64.exe" -ArgumentList "/i /qn /S /AllUsers /norestart" -Wait -PassThru 
                 Write-Output "Python installation complete."
                 Start-Process "D:\a\WendzelNNTPd\WendzelNNTPd\thunderbird-setup.exe" -ArgumentList "/i /qn /S /AllUsers /norestart" -Wait -PassThru 
                 Write-Output "Thunderbird installation complete."
                 python -m ensurepip --upgrade
                 npm i --location=global appium
                 pip install Appium-Python-Client
                 pip install -U pytest
                 pip install requests
                 pip install pyautogui
                 appium driver install windows
                 Write-Output "installation complete."     
             - name: Add WinAppDriver firewall rule
               run: netsh advfirewall firewall add rule name="WinAppDriver remote" dir=in action=allow protocol=TCP localport=4723
             - name: Add videos directory for appium tests
               run: New-Item D:\a\WendzelNNTPd\WendzelNNTPd\user-acceptance-test\videos\ -ItemType Directory -ea 0
             - name: Run appium
               uses: nick-fields/retry@v2
               with:
                timeout_minutes: 10
                max_attempts: 10
                command: |
                  Start-Process "C:\npm\prefix\appium" -PassThru
                  python -m pytest D:\a\WendzelNNTPd\WendzelNNTPd\user-acceptance-test\snntp_thunderbird.py 
             - uses: actions/upload-artifact@v4
               name: Upload videos
               if: always()
               with:
                 name: videos-snntp
                 path: D:\a\WendzelNNTPd\WendzelNNTPd\user-acceptance-test\videos\
                 retention-days: 1
    cleanup:
        runs-on: ubuntu-latest
        needs: [
            build-and-deploy,
            uat-nntp,
            uat-snntp,
            unit-tests
        ]
        if: always()
        steps:
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: 'Stop container'
          uses: azure/cli@v2
          with:
            azcliversion: latest
            inlineScript: |
                az container stop --name "wendzelnntpd-${{ github.sha }}" --resource-group WendzelNNTPd
        - name: 'Delete container'
          uses: azure/cli@v2
          with:
              azcliversion: latest
              inlineScript: |
                az container delete --name "wendzelnntpd-${{ github.sha }}" --resource-group WendzelNNTPd --yes
        - name: 'Delete container image'
          uses: azure/cli@v2
          with:
              azcliversion: latest
              inlineScript: |
                az acr repository delete --name wendzelnntpd --image wendzelnntpd:${{ github.sha }} --yes